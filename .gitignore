# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# PyTorch
*.pth
*.pt

# TensorBoard logs
runs/
logs/
tensorboard_logs/

# Model checkpoints (large files)
models/*/
checkpoints/
*.ckpt
*.h5
*.hdf5

# Data files (potentially large)
data/raw/
data/processed/
*.npy
*.npz
*.pkl
*.pickle

# Output files
predictions/

# Temporary files
temp/
tmp/
*.tmp

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Flask uploads and reports
src/deployment/web_uploads/
src/deployment/web_reports/
src/deployment/templates/

# Log files
*.log

# Configuration files with sensitive data
config.ini
secrets.json
.env.local
.env.production

# Large image files and dataset
.data/*
data/
data/raw/
data/processed/
data/test/
data/train/
data/validation/
*.tiff
*.tif
*.png
*.jpg
*.jpeg


# Backup files
*.bak
*.backup

# Archive files
*.zip
*.tar.gz
*.rar

# Documentation build
docs/_build/
docs/build/

# Coverage reports
htmlcov/

# Virtual environments
venv*/
env*/

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local development
.local/
local_config.py 


# diagrams
diagrams/

# Docs
docs/
docs/build/
docs/_build/
docs/html/
docs/latex/
docs/man/
docs/pdf/
docs/tex/
docs/xml/
*.pdf


# Archive files - keep essential data formats but not tests
*.jsonl.gz
*.jsonl.bz2
*.jsonl.zip
*.jsonl.tar


# helper files and scripts 
/insights 
/visualizations
/outputs
/web_reports
/web_uploads
/tests

# Utility scripts and tools
utils/

# Python cache and coverage
.pytest_cache/
.coverage
.coverage.*
.cache

# Note: models_checkpoints and tests are now tracked via Git LFS and regular git
/models_checkpoints/compressed
/models_checkpoints/deployment
/models_checkpoints/variants

tests/test_pipelines.py


